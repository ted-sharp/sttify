<Window x:Class="Sttify.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Sttify Settings"
        Width="600" Height="500"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize">


    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Title -->
        <TextBlock Grid.Row="0"
                   Text="Sttify Settings"
                   FontSize="18"
                   FontWeight="Bold"
                   Margin="0,0,0,10"/>

        <!-- Settings Tabs -->
        <TabControl Grid.Row="1">
            <TabItem Header="General">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                        <CheckBox Content="Start with Windows"
                                 IsChecked="{Binding Settings.Application.StartWithWindows}"
                                 Margin="0,5"/>
                        <CheckBox Content="Show in system tray"
                                 IsChecked="{Binding Settings.Application.ShowInTray}"
                                 Margin="0,5"/>
                        <CheckBox Content="Start minimized"
                                 IsChecked="{Binding Settings.Application.StartMinimized}"
                                 Margin="0,5"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Overlay">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                        <TextBlock Text="Transparent overlay (WPF) to show live recognition text" FontWeight="Bold" Margin="0,0,0,8"/>

                        <CheckBox Content="Enable Overlay"
                                  IsChecked="{Binding Settings.Overlay.Enabled}"
                                  Margin="0,0,0,10"/>

                        <Label Content="Update Frequency (per second):"/>
                        <Slider Value="{Binding Settings.Overlay.UpdatePerSec}"
                                Minimum="1" Maximum="10"
                                TickFrequency="1" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Settings.Overlay.UpdatePerSec, StringFormat=Current: {0} updates/sec}"
                                   Foreground="Gray" FontSize="11" Margin="0,0,0,10"/>

                        <Label Content="Text Length Limit:"/>
                        <Slider Value="{Binding Settings.Overlay.MaxChars}"
                                Minimum="20" Maximum="400"
                                TickFrequency="10" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Settings.Overlay.MaxChars, StringFormat=Current: {0} characters}"
                                   Foreground="Gray" FontSize="11" Margin="0,0,0,10"/>

                        <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                            <CheckBox Content="Topmost" IsChecked="{Binding Settings.Overlay.Topmost}" Margin="0,0,15,0"/>
                            <CheckBox Content="Click-through" IsChecked="{Binding Settings.Overlay.IsClickThrough}"/>
                        </StackPanel>

                        <Label Content="Opacity:"/>
                        <Slider Value="{Binding Settings.Overlay.Opacity}"
                                Minimum="0.2" Maximum="1.0" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Settings.Overlay.Opacity, StringFormat=Current: {0:F2}}"
                                   Foreground="Gray" FontSize="11" Margin="0,0,0,10"/>

                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <CheckBox Content="Enable Fade" IsChecked="{Binding Settings.Overlay.EnableFade}"/>
                            <StackPanel Orientation="Horizontal" Margin="15,0,0,0">
                                <TextBlock Text="Fade In (ms):" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                <Slider Width="160" Value="{Binding Settings.Overlay.FadeInMs}" Minimum="0" Maximum="1000" TickFrequency="50" IsSnapToTickEnabled="True"/>
                                <TextBlock Text="{Binding Settings.Overlay.FadeInMs}" VerticalAlignment="Center" Margin="6,0,0,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="15,0,0,0">
                                <TextBlock Text="Fade Out (ms):" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                <Slider Width="160" Value="{Binding Settings.Overlay.FadeOutMs}" Minimum="0" Maximum="1000" TickFrequency="50" IsSnapToTickEnabled="True"/>
                                <TextBlock Text="{Binding Settings.Overlay.FadeOutMs}" VerticalAlignment="Center" Margin="6,0,0,0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="15,0,0,0">
                                <TextBlock Text="Easing:" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                <ComboBox Width="120" SelectedValue="{Binding Settings.Overlay.FadeEasing}">
                                    <ComboBoxItem Content="Cubic"/>
                                    <ComboBoxItem Content="Quadratic"/>
                                    <ComboBoxItem Content="Sine"/>
                                    <ComboBoxItem Content="Circle"/>
                                    <ComboBoxItem Content="Quartic"/>
                                    <ComboBoxItem Content="Quintic"/>
                                </ComboBox>
                                <TextBlock Text="Mode:" VerticalAlignment="Center" Margin="10,0,6,0"/>
                                <ComboBox Width="90" SelectedValue="{Binding Settings.Overlay.FadeEaseMode}">
                                    <ComboBoxItem Content="In"/>
                                    <ComboBoxItem Content="Out"/>
                                    <ComboBoxItem Content="InOut"/>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>

                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Font Family:"/>
                            <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Settings.Overlay.FontFamily}" Margin="5,0,15,0"/>

                            <Label Grid.Row="0" Grid.Column="2" Content="Font Size:"/>
                            <Slider Grid.Row="0" Grid.Column="3" Value="{Binding Settings.Overlay.FontSize}" Minimum="12" Maximum="64" TickFrequency="2" IsSnapToTickEnabled="True"/>

                            <Label Grid.Row="1" Grid.Column="0" Content="Foreground (ARGB Hex):"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Settings.Overlay.Foreground}" Margin="5,0,15,0"/>

                            <Label Grid.Row="1" Grid.Column="2" Content="Background (ARGB Hex):"/>
                            <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Settings.Overlay.Background}"/>
                        </Grid>

                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="0" Content="Horizontal Alignment:"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" SelectedValue="{Binding Settings.Overlay.HorizontalAlignment}" Margin="5,0,15,0">
                                <ComboBoxItem Content="Left"/>
                                <ComboBoxItem Content="Center"/>
                                <ComboBoxItem Content="Right"/>
                                <ComboBoxItem Content="Stretch"/>
                            </ComboBox>

                            <Label Grid.Row="0" Grid.Column="2" Content="Vertical Alignment:"/>
                            <ComboBox Grid.Row="0" Grid.Column="3" SelectedValue="{Binding Settings.Overlay.VerticalAlignment}">
                                <ComboBoxItem Content="Top"/>
                                <ComboBoxItem Content="Center"/>
                                <ComboBoxItem Content="Bottom"/>
                                <ComboBoxItem Content="Stretch"/>
                            </ComboBox>

                            <Label Grid.Row="1" Grid.Column="0" Content="Margin X:"/>
                            <Slider Grid.Row="1" Grid.Column="1" Value="{Binding Settings.Overlay.MarginX}" Minimum="0" Maximum="200" TickFrequency="5" IsSnapToTickEnabled="True" Margin="5,0,15,0"/>

                            <Label Grid.Row="1" Grid.Column="2" Content="Margin Y:"/>
                            <Slider Grid.Row="1" Grid.Column="3" Value="{Binding Settings.Overlay.MarginY}" Minimum="0" Maximum="300" TickFrequency="5" IsSnapToTickEnabled="True"/>
                        </Grid>

                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <Button Content="Preview" Width="100" Command="{Binding PreviewOverlayCommand}"/>
                            <Button Content="Hide" Width="80" Margin="10,0,0,0" Command="{Binding HideOverlayCommand}"/>
                        </StackPanel>

                        <GroupBox Header="Auto Hide &amp; Width" Margin="0,10,0,0">
                            <StackPanel Margin="10">
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,6">
                                    <TextBlock Text="Auto Hide (ms):" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                    <Slider Width="220" Value="{Binding Settings.Overlay.AutoHideMs}" Minimum="0" Maximum="10000" TickFrequency="200" IsSnapToTickEnabled="True"/>
                                    <TextBlock Text="{Binding Settings.Overlay.AutoHideMs}" VerticalAlignment="Center" Margin="6,0,0,0"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Max Width Ratio:" VerticalAlignment="Center" Margin="0,0,6,0"/>
                                    <Slider Width="220" Value="{Binding Settings.Overlay.MaxWidthRatio}" Minimum="0.3" Maximum="1.0" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
                                    <TextBlock Text="{Binding Settings.Overlay.MaxWidthRatio, StringFormat={}{0:F2}}" VerticalAlignment="Center" Margin="6,0,0,0"/>
                                </StackPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Outline" Margin="0,10,0,0">
                            <StackPanel Margin="10">
                                <CheckBox Content="Enable Outline" IsChecked="{Binding Settings.Overlay.OutlineEnabled}"/>
                                <Grid Margin="0,6,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="Color:"/>
                                    <TextBox Grid.Column="1" Text="{Binding Settings.Overlay.OutlineColor}" Margin="5,0,15,0"/>
                                    <Label Grid.Column="2" Content="Thickness:"/>
                                    <Slider Grid.Column="3" Value="{Binding Settings.Overlay.OutlineThickness}" Minimum="0" Maximum="10" TickFrequency="0.5" IsSnapToTickEnabled="True"/>
                                </Grid>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Target Monitor" Margin="0,10,0,0">
                            <StackPanel Margin="10">
                                <TextBlock Text="-1: Cursor monitor, -2: Primary monitor, >=0: Specific index" Foreground="Gray" FontSize="11"/>
                                <Grid Margin="0,6,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="Monitor Index:"/>
                                    <TextBox Grid.Column="1" Text="{Binding Settings.Overlay.TargetMonitorIndex}"/>
                                </Grid>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Audio">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                        <Label Content="Microphone (Audio Input Device):"/>
                        <ComboBox ItemsSource="{Binding AudioDevices}"
                                 DisplayMemberPath="Name"
                                 SelectedValuePath="Id"
                                 SelectedValue="{Binding Settings.Audio.DeviceId}"
                                 Margin="0,5,0,10"/>

                        <Label Content="Sample Rate:"/>
                        <ComboBox Margin="0,5,0,10">
                            <ComboBoxItem Content="16000 Hz" IsSelected="True"/>
                            <ComboBoxItem Content="22050 Hz"/>
                            <ComboBoxItem Content="44100 Hz"/>
                        </ComboBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Engine">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="STT Engine:" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" ItemsSource="{Binding AvailableEngines}"
                                 SelectedItem="{Binding EngineProfile}"
                                 Margin="5,0,5,0" VerticalAlignment="Center"/>
                        <Button Grid.Column="2" Content="📦 Models"
                               Command="{Binding ShowVoskModelInfoCommand}"
                               Width="70" VerticalAlignment="Center" Margin="0,0,5,0"
                               ToolTip="Show Vosk model download information"
                               Visibility="{Binding IsVoskSelected, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Button Grid.Column="3" Content="📖 Docs"
                               Command="{Binding OpenEngineDocumentationCommand}"
                               Width="60" VerticalAlignment="Center"
                               ToolTip="Open official documentation"/>
                    </Grid>

                    <!-- Vosk Configuration -->
                    <GroupBox Header="Vosk Configuration" Margin="0,15,0,0"
                             Visibility="{Binding IsVoskSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Margin="10">
                            <TextBlock Text="Download models from: https://alphacephei.com/vosk/models"
                                      Margin="0,0,0,10" Foreground="Blue" TextDecorations="Underline"
                                      MouseLeftButtonUp="OnVoskModelsUrlClick" Cursor="Hand"/>

                            <Label Content="Vosk Model Path:"/>
                            <Grid Margin="0,5,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding Settings.Engine.Vosk.ModelPath}"/>
                                <Button Grid.Column="1" Content="📁 Folder"
                                       Command="{Binding BrowseForModelFolderCommand}"
                                       Width="80" Margin="5,0,5,0"
                                       ToolTip="Select a model folder"/>
                                <Button Grid.Column="2" Content="📦 ZIP"
                                       Command="{Binding BrowseForModelZipCommand}"
                                       Width="80" Margin="0,0,0,0"
                                       ToolTip="Select and extract a ZIP model file"/>
                            </Grid>

                            <CheckBox Content="Enable punctuation"
                                     IsChecked="{Binding Settings.Engine.Vosk.Punctuation}"
                                     Margin="0,5"/>
                        </StackPanel>
                    </GroupBox>

                    <!-- Vibe Configuration -->
                    <GroupBox Header="Vibe Configuration" Margin="0,15,0,0"
                             Visibility="{Binding IsVibeEngine, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Margin="10">
                            <Label Content="Vibe Endpoint:"/>
                            <TextBox Text="{Binding Settings.Engine.Vibe.Endpoint}" Margin="0,5,0,10"/>
                            <TextBlock Text="URL of the Vibe HTTP API server (e.g., http://localhost:8080)"
                                      Foreground="Gray" FontSize="11" Margin="0,0,0,10"/>

                            <Label Content="API Key (optional):"/>
                            <TextBox Text="{Binding Settings.Engine.Vibe.ApiKey}" Margin="0,5,0,10"/>

                            <Label Content="Language:"/>
                            <ComboBox SelectedValue="{Binding Settings.Engine.Vibe.Language}" Margin="0,5,0,10">
                                <ComboBoxItem Content="Auto Detect" Tag=""/>
                                <ComboBoxItem Content="Japanese (ja)" Tag="ja"/>
                                <ComboBoxItem Content="English (en)" Tag="en"/>
                                <ComboBoxItem Content="Chinese (zh)" Tag="zh"/>
                            </ComboBox>

                            <CheckBox Content="Enable diarization (speaker separation)"
                                     IsChecked="{Binding Settings.Engine.Vibe.EnableDiarization}"
                                     Margin="0,5"/>
                            <CheckBox Content="Enable post-processing"
                                     IsChecked="{Binding Settings.Engine.Vibe.EnablePostProcessing}"
                                     Margin="0,5"/>

                            <Button Content="Test Connection"
                                   Command="{Binding TestVibeCommand}"
                                   Width="120" HorizontalAlignment="Left" Margin="0,10,0,0"/>
                        </StackPanel>
                    </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Output">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                    <Label Content="Primary Output:"/>
                    <ComboBox SelectedIndex="{Binding PrimaryOutputIndex}"
                             Margin="0,5,0,10">
                        <ComboBoxItem Content="SendInput (with IME Control)"/>
                        <ComboBoxItem Content="External Process"/>
                        <ComboBoxItem Content="Stream Output"/>
                    </ComboBox>

                    <!-- IME Control Settings -->
                    <GroupBox Header="IME Control Settings" Margin="0,0,0,15"
                             Visibility="{Binding IsSendInputSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Margin="10">
                            <TextBlock Text="Japanese IME control for speech-to-text input (日本語IME制御)"
                                      Margin="0,0,0,10" TextWrapping="Wrap" FontStyle="Italic" FontWeight="Bold"/>

                            <CheckBox Content="Enable IME control"
                                     IsChecked="{Binding Settings.Output.SendInput.Ime.EnableImeControl}"
                                     Margin="0,5"/>
                            <TextBlock Text="Automatically manage IME during speech-to-text input to prevent conflicts"
                                      Foreground="Gray" FontSize="11" Margin="20,0,0,5" TextWrapping="Wrap"/>

                            <CheckBox Content="Close IME when sending text"
                                     IsChecked="{Binding Settings.Output.SendInput.Ime.CloseImeWhenSending}"
                                     Margin="0,5"/>
                            <TextBlock Text="💡 Temporarily close IME during text input, then restore original state (recommended for Japanese)"
                                      Foreground="Gray" FontSize="11" Margin="20,0,0,5" TextWrapping="Wrap"/>

                            <CheckBox Content="Set alphanumeric mode"
                                     IsChecked="{Binding Settings.Output.SendInput.Ime.SetAlphanumericMode}"
                                     Margin="0,5"/>
                            <TextBlock Text="⚠️ Alternative: Switch to alphanumeric mode instead of closing IME (use only if closing IME causes issues)"
                                      Foreground="DarkOrange" FontSize="11" Margin="20,0,0,5" TextWrapping="Wrap"/>

                            <CheckBox Content="Skip when IME is composing"
                                     IsChecked="{Binding Settings.Output.SendInput.Ime.SkipWhenImeComposing}"
                                     Margin="0,5"/>
                            <TextBlock Text="Skip text input if IME is actively composing to prevent conflicts"
                                      Foreground="Gray" FontSize="11" Margin="20,0,0,5" TextWrapping="Wrap"/>

                            <TextBlock Text="🏮 How it works: Speech recognition sends Japanese text via Unicode SendInput. IME is temporarily managed to prevent composition conflicts, then restored to original state (日本語/ひらがな mode)."
                                      Background="LightYellow" Padding="8" Margin="0,10,0,5" TextWrapping="Wrap"/>
                        </StackPanel>
                    </GroupBox>

                    <!-- Test Section removed -->
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Hotkeys">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                        <GroupBox Header="Application Hotkeys" Margin="0,0,0,15">
                            <StackPanel Margin="10">
                                <Label Content="Toggle UI:"/>
                                <TextBox Text="{Binding Settings.Hotkeys.ToggleUi}"
                                        Margin="0,5,0,10"/>

                                <Label Content="Toggle Microphone:"/>
                                <TextBox Text="{Binding Settings.Hotkeys.ToggleMic}"
                                        Margin="0,5,0,10"/>

                                <Label Content="Stop Microphone:"/>
                                <TextBox Text="{Binding Settings.Hotkeys.StopMic}"
                                        Margin="0,5,0,10"/>
                            </StackPanel>
                        </GroupBox>

                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Interface">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <StackPanel Margin="10">
                    <GroupBox Header="Control Window" Margin="0,0,0,15">
                        <StackPanel Margin="10">
                            <Label Content="Current Window Position:"/>
                            <Grid Margin="0,5,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="X Position:" FontWeight="Bold" Margin="0,2,10,2"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Margin="0,2">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}Left: {0}">
                                            <Binding Path="Settings.Application.ControlWindow.Left"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Y Position:" FontWeight="Bold" Margin="0,2,10,2"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" Margin="0,2">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}Top: {0}">
                                            <Binding Path="Settings.Application.ControlWindow.Top"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Display:" FontWeight="Bold" Margin="0,2,10,2"/>
                                <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Settings.Application.ControlWindow.DisplayConfiguration}" Margin="0,2"/>
                            </Grid>

                            <TextBlock Text="Reset control window position to default location"
                                      Margin="0,5,0,10" TextWrapping="Wrap"/>
                            <Button Content="Reset Window Position"
                                   Command="{Binding ResetWindowPositionCommand}"
                                   Width="150" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Display Settings" Margin="0,0,0,15">
                        <StackPanel Margin="10">
                            <CheckBox Content="Always show window on primary monitor"
                                     IsChecked="{Binding Settings.Application.AlwaysOnPrimaryMonitor}"
                                     Margin="0,5"/>
                            <CheckBox Content="Remember window position"
                                     IsChecked="{Binding Settings.Application.RememberWindowPosition}"
                                     Margin="0,5"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Logs &amp; Diagnostics">
                        <StackPanel Margin="10">
                            <TextBlock Text="Open application log files directory"
                                      Margin="0,0,0,10" TextWrapping="Wrap"/>
                            <Button Content="Open Log Directory"
                                   Command="{Binding OpenLogDirectoryCommand}"
                                   Width="150" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

        </TabControl>

        <!-- Buttons -->
        <StackPanel Grid.Row="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="0,10,0,0">
            <Button Content="Reset to Defaults"
                   Command="{Binding ResetToDefaultsCommand}"
                   Width="120" Margin="0,0,10,0"/>
            <Button Content="Cancel" Width="80" Margin="0,0,10,0" Click="OnCancel"/>
            <Button Content="OK" Width="80" IsDefault="True" Click="OnOK"/>
        </StackPanel>
    </Grid>
</Window>
